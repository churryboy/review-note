// Prisma schema for review-note
// datasource and generator
 datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 }

 generator client {
  provider = "prisma-client-js"
 }

 model User {
  id        String   @id @default(cuid())
  googleId  String?  @unique
  email     String   @unique
  name      String?
  picture   String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  questions  Question[]
  answers    Answer[]
  achievements Achievement[]
 }

 model Image {
  id        String   @id @default(cuid())
  hash      String   @unique
  url       String
  createdAt DateTime @default(now())
  questions Question[]
 }

 model Question {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  image        Image    @relation(fields: [imageId], references: [id])
  imageId      String
  questionNumber String?
  publisher    String?
  category     String?
  round        Int       @default(0)
  timestamp    DateTime  @default(now())
  lastAccessed DateTime  @default(now())
  quizCount    Int       @default(0)

  answers      Answer[]
  popQueues    PopQuizQueue[]
  achievements Achievement[]

  @@index([userId])
  @@index([imageId])
  @@index([round])
  @@index([lastAccessed])
 }

 model Answer {
  id        String   @id @default(cuid())
  question  Question @relation(fields: [questionId], references: [id])
  questionId String  @unique
  imageHash String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@index([imageHash])
 }

 model PopQuizQueue {
  id         String   @id @default(cuid())
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  nextAt     DateTime
  createdAt  DateTime @default(now())

  @@index([nextAt])
  @@unique([questionId])
 }

 model Achievement {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  achievedAt DateTime @default(now())

  @@index([userId])
  @@index([questionId])
 } 